{
  "name": "mench-ai-workspace",
  "version": "1.0.0",
  "description": "Mench-ai: A Blueprint for a Kosher AI Academic Tutor - Complete Workspace",
  "repository": {
    "type": "git",
    "url": "https://github.com/TAPUZE/mench-ai.git"
  },
  "homepage": "https://github.com/TAPUZE/mench-ai",
  "bugs": {
    "url": "https://github.com/TAPUZE/mench-ai/issues"
  },
  "keywords": [
    "ai",
    "education", 
    "orthodox-jewish",
    "tutor",
    "kosher-ai",
    "academic",
    "learning",
    "torah-values"
  ],
  "author": "TAPUZE",
  "license": "MIT",
  "workspaces": [
    "backend",
    "frontend"
  ],
  "scripts": {
    "install:all": "npm install && npm run install:backend && npm run install:frontend",
    "install:backend": "cd backend && npm install",
    "install:frontend": "cd frontend && npm install",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev", 
    "dev:frontend": "cd frontend && npm run dev",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "start": "npm run start:backend",
    "start:backend": "cd backend && npm start",
    "start:frontend": "cd frontend && npm start",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "clean": "npm run clean:backend && npm run clean:frontend",
    "clean:backend": "cd backend && rm -rf node_modules && rm -rf dist",
    "clean:frontend": "cd frontend && rm -rf node_modules && rm -rf .next && rm -rf out",
    "reset": "npm run clean && npm run install:all",
    "setup": "npm run install:all && npm run setup:env",
    "setup:env": "cp backend/.env.example backend/.env && cp frontend/.env.example frontend/.env.local && echo 'Environment files created! Please edit them with your configuration.'",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d", 
    "docker:down": "docker-compose down",
    "deploy:prep": "npm run build && npm run test",
    "check:health": "curl http://localhost:3001/api/health || echo 'Backend not running'",
    "docs:serve": "cd docs && python -m http.server 8080"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  }
}